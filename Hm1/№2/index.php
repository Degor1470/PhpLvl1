<?php
//Поскольку две пременные основаны на одном классе, то и отсчёт у них совместный. каждый раз прибавляется единица к классу А, а так как обе переменные на нём основаны, они ведут поочерёдный счёт
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();

//-------------------------------------------------------------------------------------------

//Здесь же одна перменная основана на родителе, а вторая на наследнике. Они по разному ведут счёт. Изза этого и получилось 1122
class A1{
    public function foo1() {
        static $x = 0;
        echo ++$x;
    }
}
class B1 extends A1 {
}
$a1 = new A1();
$b1 = new B1();
$a1->foo1();
$b1->foo1();
$a1->foo1();
$b1->foo1();

//-------------------------------------------------------------------------------------------

//Код выведет тоже самое 1122. разница только в скобках.
class A2 {
    public function foo2() {
        static $x = 0;
        echo ++$x;
    }
}
class B2 extends A2 {
}
$a1 = new A2;
$b1 = new B;
$a1->foo2();
$b1->foo2();
$a1->foo2();
$b1->foo2();